x <- (1,3,5)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2:3
x+y
x
y
x <- c(3, 5, 1, 10, 12, 6)
x <- c(4, "a", TRUE)
x
x < 1:4
x <- 1:4
y <- 2
x+y
setwd
str(setwd)
setwd("/home/shrik/tech/cfda/")
getwd()
ls
ls)(
ls)(
ls()
read.csv("hw1_data.csv", "r")
hw1data <- read.csv("hw1_data.csv")
hw1data
head(hw1data)
str(head)
head(hw1data, 2)
str(hw1data)
tail(hw1data)
tail(hw1data,2)
mid
tail
head(hw1data, 47)
tail(head(hw1data, 47))
tail(head(hw1data, 47), 1)
hw1data[1,]
hw1data[,1]
is.na(hw1data[,1])
sum(is.na(hw1data[,1]) == 1)
sum(is.na(hw1data[,1]) == TRUE)
mean
hw1data[,1]
mean(hw1data[,1])
hw1data[,1]
ozone
na.exclude(hw1data[,1])
ozone <- na.exclude(hw1data[,1])
ozone
summary(hw1data[,1])
str(hw1data[,1])
summary(hw1data[,1])
mean(hw1data[,1], na.rm = TRUE)
hw1data
head(hw1data)
hw1data$Ozeon
hw1data$Ozone
hw1data[["Ozone" > 31]]
hw1data[["Ozone"] > 31]
hw1data["Ozone" > 31]
hw1data[hw1data > 31]
hw1data[hw1data$Ozone > 31]
hw1data[hw1data$Ozone > 31, ]
hw1data[hw1data$Ozone > 31, hw1data$Temp > 90, ]
hw1data[hw1data$Ozone > 31, ]
ozone31 <- hw1data[hw1data$Ozone > 31, ]
temp90also <- ozone31[ozone31$Temp > 90, ]
temp90also
complete.cases(temp90also)
good <- complete.cases(temp90also)
temp90also[good, ]
summary(temp90also[good, ])
summary(temp90also[good$Solar.R, ])
str(hw1data)
hw1data["Month" == 6]
hw1data["Month" == 6, ]
hw1data[, "Month" == 6]
hw1data[hw1data$Month == 6, ]
summary(hw1data[hw1data$Month == 6, ])
q()
x <- c("a", "b", "c", "d")
seq_along(x)
x
for (letter in x) { print (letter)}
seq_len(x)
seq_len(nrow(x))
x <- matrix(1:6,2,3)
for (i in seq_len(nrow(x))) { for (j in seq_len(ncol(x))) { print(x[i,j])}}
x
for (i in seq_len(nrow(x))) { for (j in seq_len(ncol(x))) { print(i + x[i,j])}}
for (i in 10:1) print i
for (i in 10:1) print (i)
help(rbinom)
formals(seq_len)
formals(rbinom)
args(rbinom)
mydata <- rnorm(100)
sd(mydata)
args(sd)
args(mean)
formals(mean)
help(mean)
args(lm)
args(glm)
clear()
clear
cls()
hw1data
hw1da
UseMethod(mean)
UseMethod("mean")
mean
library("rstudio", lib.loc="/usr/lib/rstudio/R/library")
ls
ls()
release
delete
remove
remove()
ls)()
ls()
x <- seq(1.7, 1.9, len=100)
n <- 1:4
r <- lapply(n, rnorm)
r
runif(10)
runif(5, 10, 20)
help(lapply)
x <- list(rnorm(100), runif(100), rpois(100,1))
sapply(x, quantile, probs = c(0.25,0.75))
help(quantile)
help(sapply)
help(quantile)
sapply(x, quantile, probs = c(0.25,0.25, 0.25, 0.25))
sapply(x, quantile, probs = seq(0, 1, 0.25))
help(seq)
seq
seq()
seq(1, 10)
seq(0, 0.5)
hlp(quantile)
help(quantile)
quantile(x <- rnorm(1001))
quantile(x,  probs = c(0.1, 0.5, 1, 2, 5, 10, 50, NA)/100)
str(rnorm)
help(gl)
f <- gl(3,10)
f
f <- gl(2, 8, labels = c("Control", "Treat"))
f
gl(2,1,20)
gl(2,2,20)
gl
head(hw1data)
lapply()
lapply
lapply(hw1data, mean)
s<-split(hw1data, hw1data$Month)
s
colMeans
help(interaction)
f <- gl(25, 4)
f
f <- gl(4, 25)
f
split (hw1data, f)
split(hw1data, f)
rep
str(rep)
help(rep)
help(invisible)
fluPlot <- function(country="ca", regions="Nova.Scotia")
{
url <- sprintf("http://www.google.org/flutrends/intl/en_us/%s/data.txt", country)
d <- read.csv(url, skip=11, header=TRUE)
n <- length(regions)
t <- as.POSIXct(d[["Date"]])
for (i in 1:n) {
if (i == 1) {
plot(t, d[[regions[i]]], xlab="", ylab=regions[i], type='l', col=i)
grid()
} else {
lines(t, d[[regions[i]]], col=i)
}
}
legend("top", col=1:n, lwd=par('lwd'), legend=regions, bg='white')
}
par(mar=c(2, 2, 2, 2), mgp=c(2, 0.7, 0))
fluPlot("ca", c("Ontario", "Nova.Scotia"))
n
length(regions)
as.POSIXct
help(as.POSIXct)
fluPlot("ca", c("Ontario", "Nova.Scotia"))
t
ls
ls()
t()
par
mar
