plot(x,y)
plot(x,y, type = "n")
points(x[g == "Male"], y[g== "Male"], col = "green")
points(x[g == "Female"], y[g== "Female"], col = "blue")
points(x[g == "Female"], y[g== "Female"], col = "blue", pch = 19)
xyplot(x,y)
library("lattice", lib.loc="/usr/lib/R/library")
xyplot(x,y)
?xyplot
library(lattice)
library(lname)
library(nlme)
xyplot(distance ~ age | Subject, data = Orthodont)
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
?Orthodont
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
xyplot(distance ~ age | sex, data = Orthodont, type = "b")
xyplot(distance ~ age | Sex, data = Orthodont, type = "b")
xyplot(distance ~ age | Sex, data = Orthodont)
xyplot(distance ~ sex | age, data = Orthodont)
xyplot(distance ~ Sex | age, data = Orthodont)
?trellis
??treliss
??trellis
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
data <- xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
data
plot(x,y)
data
str(data)
summary(data)
?data
x <- rnorm(100)
y <- x + rnorm(100, sd = 0.5)
f <- gl(2, 50, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f)
xyplot(y ~ x | f,)
panel = function(x , y, ...) {}
panel.xyplot(x,y,...)
xyplot(y ~ x | f,
panel = function(x , y, ...) {
panel.xyplot(x,y,...)
panel.abline(h = median(y),
lty = 2)
})
xyplot(y ~ x | f,
panel = function(x , y, ...) {
panel.xyplot(x,y,...)
panel.lmline(x, y, col = 2)
})
library(lattice)
package ? lattice
library( help = lattice)
data(environment)
data(environmental)
?environmental
head(environmental)
xyplot(ozone ~ radiation, data = environmental)
xyplot(ozone ~ radiation, data = environmental, man = "Ozone vs Radiation")
xyplot(ozone ~ radiation, data = environmental, main = "Ozone vs Radiation")
xyplot(ozone ~ radiation, data = environmental)
xyplot(ozone ~ radiation, data = environmental, main = "Ozone vs Radiation")
xyplot(ozone ~ temperature, data = environmental, main = "Ozone vs Temperature)
xyplot(ozone ~ temperature, data = environmental, main = "Ozone vs Temperature)
xyplot(ozone ~ temperature, data = environmental, main = "Ozone vs Temperature")
xyplot(ozone ~ temperature, data = environmental)
summary(environmental$temperature)
temp.cut <- equal.count(environmental$temperature, 4)
temp.cut
?equal.count
temp.cut
xyplot(ozone ~ temperature, data = environmental)
xyplot(ozone ~ radiation | temp.cut, data = environmental)
xyplot(ozone ~ radiation | temp.cut, data = environmental, layout = c(1,4))
xyplot(ozone ~ radiation | temp.cut, data = environmental, layout = c(1,4), as.table = TRUE)
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE)
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE,
panel = function(x, y , ..) {
panel.xyplot(x,y,...)
fit <- lm(y~x)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE,
panel = function(x, y , ..) {
panel.xyplot(x,y,...)
fit <- lm(y~x)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE,
panel = function(x, y , ...) {
panel.xyplot(x,y,...)
fit <- lm(y~x)
panel.abline(fit)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 18,
panel = function(x, y , ...) {
panel.xyplot(x,y,...)
fit <- lm(y~x)
panel.abline(fit, lwd = 2)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 18,
panel = function(x, y , ...) {
panel.xyplot(x,y,...)
panel.loess(x,y)
})
xyplot(ozone ~ radiation | temp.cut, data = environmental, as.table = TRUE, pch = 18,
panel = function(x, y , ...) {
panel.xyplot(x,y,...)
panel.loess(x,y)
}, xlab = "Solar Radiation", ylab = "Ozone (ppb)",
main = "Ozone vs. Solar Radiation")
wind.cut = equal.count(environmental$win, 4)
wind.cut
xyplot(ozone ~ radiation | temp.cut * wind.cut, data = environmental, as.table = TRUE, pch = 18,
panel = function(x, y , ...) {
panel.xyplot(x,y,...)
panel.loess(x,y)
}, xlab = "Solar Radiation", ylab = "Ozone (ppb)",
main = "Ozone vs. Solar Radiation")
splong(~ environmental)
splom(~ environmental)
histogram(~temperature, data=environmental)
histogram(~temperature| wind.cut, data=environmental)
histogram(~ozone| wind.cut, data=environmental)
histogram(~ozone| temp.cut*wind.cut, data=environmental)
?plotmath
plot(0, 0, main = expression(theta ==0),
ylab = expression(hat(gamma) == 0),
xlab = expression(sum(x[i] * y[i], i==1,n))
)
x <- rnorm(100)
xlab =expression("The mean (" *bar(x) *") is" * sum(x[i]/n,i==1,n))
hist(x,
xlab =expression("The mean (" *bar(x) *") is" * sum(x[i]/n,i==1,n))
)
y <- x + rnorm(100, sd = 0.5)
plot (x, y,
xlab = substitute(bar(x) == k, list(k=mean(x))),
ylab = substitute(bar(y) == k, list(k=mean(y)))
)
?substitte
?substitute
par(mfrow = c(2,2))
}
for (i in 1:4) {
x <- norm(100)
hist(x , substitute(theta=num, list(num==i)))
}
for (i in 1:4) {
x <- norm(100)
hist(x , substitute(theta=num, list(num==i)))
}
for (i in 1:4) {
x <- rnorm(100)
hist(x , substitute(theta=num, list(num==i)))
}
for (i in 1:4) {
x <- rnorm(100)
hist(x , substitute(theta==num, list(num==i)))
}
for (i in 1:4) {
x <- rnorm(100)
hist(x , substitute(theta=num, list(num=i)))
}
for (i in 1:4) {
x <- rnorm(100)
hist(x , substitute(theta==num, list(num=i)))
}
par(mfrow = c(2,2))
for (i in 1:4) {
x <- rnorm(100)
hist(x , substitute(theta==num, list(num=i)))
}
for (i in 1:4) {
x <- rnorm(100)
hist(x, main=substitute(theta==num, list(num=i)))
}
?test
?text
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?axis
?lpoints
?axis
?points
?lpoints
plot(0, 0, main = expression(theta))
plot(0, 0, main = substitute(theta))
plot(0, 0, main = "theta")
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(beta))
?substitute
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?splom
?barchart
?bwplot
?coplot
?axis
?mtext
?panel.lmline
?histogram
?barchart
?boxplot
?point
?points
?mtext
source("submitscript.R")
source("submitscript.R")
who
source("submitscript.R")
source("submitscript.R")
heat.colors()
args(heat.colors)
heat.colors(20)
heat.colors(1)
?heat.colors
?colors
colours()
?colourRamp
?colorRamp
?gray
gray(8)
gray(.8)
library(RColorBrewer)
?pal
heat.colors(3)
pal <- colorRampPalette(heat.colors(3))
image(volcano, col = pal(20))
?image
?volcano
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
?rgb
rgb(218,221,172,19)
rgb(218,221,172,0.9)
plot(x,
y,
pch
=
19)
plot(x,
y,
col
=
rgb(0,
0,
0,
0.2),
pch
=
19)
plot(x,
y,
col
=
rgb(0,
0,
0,
0.2),
pch
=
19)
x <- as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-01"))
?unclass
class(x)
class(x)
unclass(x)
class(x)
class(unclass(x))
x
unclass(as.Date("1970-01-02"))
unclass(as.Date("1970-01-06"))
sys.time()
Sys.time()
Sys.time()
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
unclass(p)
names(unclass(p))
?names
p$sec
z
x
unclass(x)
x$sec
x$Sec
p <- as.POSIXlt(x)
p$sec
?strptime
x <- as.Date("2012-01-01")
y <- strptime("9 Jan 2011 11:34:21", "%d %b %Y %H:%M:%S")
x
y
x-y
x - y
x <- as.POSIXlt(x)
x - y
x <- as.Date("2012-03-01")
y <- as.Date("2012-02-28")
x - y
x <- as.POSIXct("2012-10-25 01:00:00")
y <- as.POSIXct("2012-10-25 06:00:00", tz = "GMT")
x - y
y - x
?grep
getwd()
setwd("baltimore")
getwd()
homicides <- readLines("homicides.txt")
homicides
homicides[1]
homicides[1000]
length(grep("iconHomicideShooting", homicides))
grep("iconHomicideShooting", homicides)
length(grep("iconHomicideShooting|icon_homicide_shooting", homicides))
length(grep("Cause: shooting", homicides))
length(grep("Cause: [Ss]hooting", homicides))
length(grep("[Ss]hooting", homicides))
i <- grep("[cC]ause: [Ss]hooting", homicides)
j <- grep("[Ss]hooting", homicides)
str(i)
?setdiff
setdiff(i,j)
setdiff(j,i)
homicides[318]
homicides[859]
str(j)
grep("^New", state.name)
state.name
?state.name
state.name[29]
state.name[c(29, 30, 31, 32)]
grep("^New", state.name, value = TRUE)
regexpr("<dd>[F|f]ound(.*)</dd>", homicides[1:10])
substr(homicides[1], 177, 177 + 93 - 1)
regexpr("<dd>[F|f]ound(.*?)</dd>", homicides[1:10])
substr(homicides[1], 177, 177 + 33 - 1)
r <- regexpr("<dd>[F|f]ound(.*?)</dd>", homicides[1:10])
regmatches(r)
regmatches(homicides[1:10],r)
x <- substr(homicides[1], 177, 177 + 33 - 1)
x
sub("<dd>[F|f]ound on |</dd>", "", x)
?sub
gsub("<dd>[F|f]ound on |</dd>", "", x)
r <- regexpr("<dd>[F|f]ound(.*?)</dd>", homicides[1:5])
m <- regmatches(homicides[1:5], r)
m
gsub("<dd>[F|f]ound on |</dd>", "", m)
d
as.Date(d, "%B %d, %Y")
d <- gsub("<dd>[F|f]ound on |</dd>", "", m)
d
as.Date(d, "%B %d, %Y")
r <- regexec("<dd>[F|f]ound on (.*?)</dd>", homicides)
m <- regmatches(homicides, r)
dates <- sapply(m, function(x) x[2])
m
dates <- as.Date(dates, "%B %d, %Y")
hist(dates, "month", freq = TRUE)
?bioconductor
?states
?states.names
?state
library(help="datasets")
library(methods)
?methods
methods("name")
methods("mean")
print
show
mean
getS3method(mean)
getS3method("mean")
getS3method("mean", "numeric")
getS3method("numeric", "mean")
getS3method("mean", "numeric")
getS3method("mean", "default")
set.seed(3)
df <- data.frame(x = rnorm(100), y = 1:100)
sapply(df, mean)
set.seed(10)
x <- rnorm(100)
x <- as.ts(x)
?ts
plot(x)
?representation
?rgb
?colors
?grep
grep("^([a-z]+) +\1 +[a-z]+ [0-9] ", "heading, heading by 9")
grep("^([a-z]+) +\1 +[a-z]+ [0-9] ", "bye bye from up high")
grep("^([a-z]+) +\1 +[a-z]+ [0-9] ", "night night at 8")
grep("^([a-z]+) +\1 +[a-z]+ [0-9] ", "going up and up and up")
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", "heading, heading by 9")
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", "bye bye from up high")
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", "going up and up and up")
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", "night night at 8")
length(grep("^s(.*?)r", "she likes rum raisin after running hard"))
length(grep("^s(.*?)r", c("she likes rum raisin after running hard"))
)
grep("^s(.*?)r", c("she likes rum raisin after running hard"))
?setOldClass
?topo.colors
?getMethod
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
setwd("baltimore")
getwd()
ls)()
ls()
files
file
file()
homicides <- readLines("homicides.txt")
source('~/tech/cfda/baltimore/count.R')
count()
count("homiz")
source('~/tech/cfda/baltimore/count.R')
count("homiz")
count()
source('~/tech/cfda/baltimore/count.R')
source('~/tech/cfda/baltimore/count.R')
count()
?is.null
source('~/tech/cfda/baltimore/count.R')
count()
count("homiz")
count("other")
?grep
source('~/tech/cfda/baltimore/count.R')
head("homicide")
head(homicide)
head(homicides)
head(homicides, 3)
grep("<dd>Cause", homicides)
head(homicides, 3)
length(grep("Cause: [Ss]hooting", homicides))
length(grep("Cause: Shooting", homicides))
length(grep("Cause: shooting", homicides))
length(grep("<dd>Cause: [Ss]hooting", homicides))
length(grep("<dd>Cause: blunt force", homicides))
length(grep("Cause: shooting", homicides, ignore.case = TRUE))
length(grep("<dd>Cause: shooting", homicides, ignore.case = TRUE))
length(grep("<dd>Cause: shooting</dd>", homicides, ignore.case = TRUE))
length(grep("<dd>Cause: bulnt force</dd>", homicides, ignore.case = TRUE))
length(grep("<dd>Cause: blunt force</dd>", homicides, ignore.case = TRUE))
?collapse
?collapse0
?paste0
source('~/tech/cfda/baltimore/count.R')
source('~/tech/cfda/baltimore/count.R')
source('~/tech/cfda/baltimore/count.R')
getwd()
count
count()
count("blunt force")
count("shooting")
count("asphyxiation")
count("other")
count("shooting")
count("stabbing")
count("unknown")
source("submitscript4.R")
source('~/tech/cfda/baltimore/count.R')
source('~/tech/cfda/baltimore/agecount.R')
source('~/tech/cfda/baltimore/agecount.R')
source('~/tech/cfda/baltimore/agecount.R')
num <- count("unknown")
print(num)
source('~/tech/cfda/baltimore/agecount.R')
source('~/tech/cfda/baltimore/agecount.R')
source('~/tech/cfda/baltimore/agecount.R')
source('~/tech/cfda/baltimore/agecount.R')
head(homicides,5)
leangth(homicides)
length(homicides)
source('~/tech/cfda/baltimore/agecount.R')
agecount()
agecount(34)
agecount(33498)
agecount(33498)
source('~/tech/cfda/baltimore/agecount.R')
agecount(33498)
agecount(34)
agecount(3)
agecount(21)
source('~/tech/cfda/baltimore/agecount.R')
agecount(21)
source('~/tech/cfda/baltimore/agecount.R')
agecount(21)
source('~/tech/cfda/baltimore/agecount.R')
agecount(21)
source('~/tech/cfda/baltimore/agecount.R')
agecount(21)
submit()
submit()
submit()
submit()
submit()
